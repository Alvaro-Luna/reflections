
How did viewing a diff between two versions of a file help you see the bug that was introduced?
I was prompted automatically to the lines that were different.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Making errors more easy to be spoted.
Making collaboration with other colleagues easier.
Knowing where and when I created, modified or upgrades some functions or classes.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?
Pros:
More flexibility
The guy that best know where a significative change has made is the programmer itself

Cons:
You have to be aware of it
Everybody in the project should have the same commiting strategy

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?
I think is because Git is oriented to coding and it is more likely the files are related than other types of documents.

How can you use the commands git log and git diff to view the history of files?
Not directly, You can only see the changes made to those files.

How might using version control make you more confident to make changes that could break something?
I will not be afraid of breaking things since we can go backwards anytime we want and repair what it is broken

Now that you have your workspace set up, what do you want to try using Git for?
Working with my colleague at work. Making a big project